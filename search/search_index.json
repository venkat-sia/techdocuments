{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GraaS - Growth As a Service Dashboards, deep dive analytics, insights and recommendations for real-time decision-making. GraaS eases business complexity through the use of a single dashboard, which can reduce brands' time to market and create a streamlined, informed approach to marketing, inventory, and content management. Connect data sources across silos to create a unified data pool Analyse trends & patterns in your business with our proprietary AI engine Get real-time insights and actionable recommendations Execute the recommendations across marketing, storefront, and inventory","title":"GraaS"},{"location":"#graas-growth-as-a-service","text":"Dashboards, deep dive analytics, insights and recommendations for real-time decision-making. GraaS eases business complexity through the use of a single dashboard, which can reduce brands' time to market and create a streamlined, informed approach to marketing, inventory, and content management. Connect data sources across silos to create a unified data pool Analyse trends & patterns in your business with our proprietary AI engine Get real-time insights and actionable recommendations Execute the recommendations across marketing, storefront, and inventory","title":"GraaS - Growth As a Service"},{"location":"notification_serv/","text":"Notification Server Problem The current notification server built-in lacks certain capabilities. digest notifications schedule delayed notifications cancel a triggered notification The inbuilt notification server has to be regularly maintained and updated to match the state of art notification Novu (this is the open-source notification infrastructure available) https://novu.co/ Open-source notification infrastructure User's timezone awareness is another prominent feature Requirement 1 - Digest Notifications A digest notification is a notification that consolidates information from several notifications into one and delivers that notification to the end user instead of several separate messages. Example Order(s) created for the last hour Recommendation(s) created for the last day after we create the real-time recommendations https://docs.novu.co/guides/how-to-add-digest-to-email-notifications/ ## Requirement 2 - Schedule Delayed Notifications The delay action awaits a specified amount of time before moving on to trigger the following steps of the workflow. Example After the user signs up and connects to a store, the system schedules a one-day delay notification for the user to remind him to log in to check the insights and recos https://docs.novu.co/platform/delay/#scheduled-delay Requirement 3 - Cancel Delayed Notifications The scheduled delay action needs to be cancelled Example User logs in 2 hours after the signup and connects and checks the workspace, then it is not required to send the login-reminder https://docs.novu.co/api/cancel-triggered-event/ Novu Pricing Self-hosted it is an open source https://github.com/novuhq/novu if we deploy the components in our cloud VMs, Kubernetes, then no charge We already hosting and running https://cube.dev/ (DAO layer) in our VMs and Kubernetes and not the cloud version We can host the components and upgrade the versions regularly NOVU suggests us to use the open source version if we have complicated PII security needs Cloud hosted the services are hosted and maintained in the cloud we can reach out to sales@novu.co https://www.crunchbase.com/organization/novu-1a6b How to configure https://web.novu.co/workflows invited the following team members gowtham@graas.ai ajinkya.patil@graas.ai Please check the workflows configured after login here is the API collection to trigger and cancel a notification https://github.com/venkat-sia/techdocuments/blob/main/Postman%20Collections/NOVU.postman_collection.json Instant Notifications screenshots ---","title":"Notification Server"},{"location":"notification_serv/#notification-server","text":"","title":"Notification Server"},{"location":"notification_serv/#problem","text":"The current notification server built-in lacks certain capabilities. digest notifications schedule delayed notifications cancel a triggered notification The inbuilt notification server has to be regularly maintained and updated to match the state of art notification","title":"Problem"},{"location":"notification_serv/#novu-this-is-the-open-source-notification-infrastructure-available","text":"https://novu.co/ Open-source notification infrastructure User's timezone awareness is another prominent feature","title":"Novu (this is the open-source notification infrastructure available)"},{"location":"notification_serv/#requirement-1-digest-notifications","text":"A digest notification is a notification that consolidates information from several notifications into one and delivers that notification to the end user instead of several separate messages. Example Order(s) created for the last hour Recommendation(s) created for the last day after we create the real-time recommendations https://docs.novu.co/guides/how-to-add-digest-to-email-notifications/ ## Requirement 2 - Schedule Delayed Notifications The delay action awaits a specified amount of time before moving on to trigger the following steps of the workflow. Example After the user signs up and connects to a store, the system schedules a one-day delay notification for the user to remind him to log in to check the insights and recos https://docs.novu.co/platform/delay/#scheduled-delay","title":"Requirement 1 - Digest Notifications"},{"location":"notification_serv/#requirement-3-cancel-delayed-notifications","text":"The scheduled delay action needs to be cancelled Example User logs in 2 hours after the signup and connects and checks the workspace, then it is not required to send the login-reminder https://docs.novu.co/api/cancel-triggered-event/","title":"Requirement 3 - Cancel Delayed Notifications"},{"location":"notification_serv/#novu-pricing","text":"Self-hosted it is an open source https://github.com/novuhq/novu if we deploy the components in our cloud VMs, Kubernetes, then no charge We already hosting and running https://cube.dev/ (DAO layer) in our VMs and Kubernetes and not the cloud version We can host the components and upgrade the versions regularly NOVU suggests us to use the open source version if we have complicated PII security needs Cloud hosted the services are hosted and maintained in the cloud we can reach out to sales@novu.co https://www.crunchbase.com/organization/novu-1a6b","title":"Novu Pricing"},{"location":"notification_serv/#how-to-configure","text":"https://web.novu.co/workflows invited the following team members gowtham@graas.ai ajinkya.patil@graas.ai Please check the workflows configured after login here is the API collection to trigger and cancel a notification https://github.com/venkat-sia/techdocuments/blob/main/Postman%20Collections/NOVU.postman_collection.json Instant Notifications screenshots ---","title":"How to configure"},{"location":"shopify_app/","text":"Graas \u2013 Growth as a Service Shopify app Shopify Connect Current State Connect The connect page requires the seller to do the manual steps documented here https://turbocharger.graas.ai/connector/help/Connector-shopify.html The following has to be manually entered in the TC connect page API Key Secret Key Access Token Enable Shopify tracker Once connected, the tracker has to be installed manually on the Shopify site then click Enable Shopify Tracker on the Connect page Shopify sellers don't know about Turbocharger Our sales team finds the prospective Shopify sellers for TC Graas \u2013 Growth as a Service Shopify ap Connect flow is streamlined Sellers log in to their store (example: https://admin.shopify.com/store/testgraas007/) Graas app is in pilot mode and kept as an unlisted app; hence you can't find it under Add apps Please install it from the app's App Store listing page, that is, to open our site https://apps.shopify.com/graas in the browser The user will be redirected to the turbocharger login or sign-up page If the seller is an existing customer of Turbocharger, then they can log in using their username and password, and the seller will be taken to the Connect page If the seller is NOT an existing customer of Turbocharger, then they can sign up, and the seller will be taken to the Connect page Next steps Shopify sellers to find the Turbocharger from the app store onboard new sellers using the https://apps.shopify.com/graas switch from an unlisted app to a listed app. Hence it will be visible under \"Add apps.\" Streamline the tracker installation implement the pixel APIs webhooks enable single data pipeline for tracker enhance the app to register the pixel API and auto-install the call-back function to listen to pixel events Pixel API console log npm deploy javascript function gets injected into the seller's store? installation connect flow any additional scopes any other steps to register the seller to listen pixel api events? we don't change anything in the app setup do we need to resubmit for approval? NO , not required","title":"Shopify GraaS APP"},{"location":"shopify_app/#graas-growth-as-a-service-shopify-app","text":"","title":"Graas \u2013 Growth as a Service Shopify app"},{"location":"shopify_app/#shopify-connect-current-state","text":"Connect The connect page requires the seller to do the manual steps documented here https://turbocharger.graas.ai/connector/help/Connector-shopify.html The following has to be manually entered in the TC connect page API Key Secret Key Access Token Enable Shopify tracker Once connected, the tracker has to be installed manually on the Shopify site then click Enable Shopify Tracker on the Connect page Shopify sellers don't know about Turbocharger Our sales team finds the prospective Shopify sellers for TC","title":"Shopify Connect Current State"},{"location":"shopify_app/#graas-growth-as-a-service-shopify-ap","text":"Connect flow is streamlined Sellers log in to their store (example: https://admin.shopify.com/store/testgraas007/) Graas app is in pilot mode and kept as an unlisted app; hence you can't find it under Add apps Please install it from the app's App Store listing page, that is, to open our site https://apps.shopify.com/graas in the browser The user will be redirected to the turbocharger login or sign-up page If the seller is an existing customer of Turbocharger, then they can log in using their username and password, and the seller will be taken to the Connect page If the seller is NOT an existing customer of Turbocharger, then they can sign up, and the seller will be taken to the Connect page Next steps Shopify sellers to find the Turbocharger from the app store onboard new sellers using the https://apps.shopify.com/graas switch from an unlisted app to a listed app. Hence it will be visible under \"Add apps.\" Streamline the tracker installation implement the pixel APIs webhooks enable single data pipeline for tracker enhance the app to register the pixel API and auto-install the call-back function to listen to pixel events Pixel API console log npm deploy javascript function gets injected into the seller's store? installation connect flow any additional scopes any other steps to register the seller to listen pixel api events? we don't change anything in the app setup do we need to resubmit for approval? NO , not required","title":"Graas \u2013 Growth as a Service Shopify ap"}]}